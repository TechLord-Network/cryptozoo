/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AnimalDrop } from "../AnimalDrop";

export class AnimalDrop__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _description: string,
    _data: {
      assetURI: string;
      assetGatewayURL: string;
      metadataURI: string;
      metadataGatewayURL: string;
    },
    _sets: string[],
    overrides?: Overrides
  ): Promise<AnimalDrop> {
    return super.deploy(
      _name,
      _description,
      _data,
      _sets,
      overrides || {}
    ) as Promise<AnimalDrop>;
  }
  getDeployTransaction(
    _name: string,
    _description: string,
    _data: {
      assetURI: string;
      assetGatewayURL: string;
      metadataURI: string;
      metadataGatewayURL: string;
    },
    _sets: string[],
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _description,
      _data,
      _sets,
      overrides || {}
    );
  }
  attach(address: string): AnimalDrop {
    return super.attach(address) as AnimalDrop;
  }
  connect(signer: Signer): AnimalDrop__factory {
    return super.connect(signer) as AnimalDrop__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnimalDrop {
    return new Contract(address, _abi, signerOrProvider) as AnimalDrop;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "assetURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetGatewayURL",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataGatewayURL",
            type: "string",
          },
        ],
        internalType: "struct Data",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "contract AnimalSet[]",
        name: "_sets",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zooHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260076080819052660f0f0f0f0f0f0f60cb1b60a09081526200002a916001919062000179565b503480156200003857600080fd5b506040516200096a3803806200096a8339810160408190526200005b91620003a8565b620000663362000129565b83516200007b90600290602087019062000179565b5082516200009190600390602086019062000179565b508051620000a790600890602084019062000208565b50815180518391600491620000c491839160209091019062000179565b506020828101518051620000df926001850192019062000179565b5060408201518051620000fd91600284019160209091019062000179565b50606082015180516200011b91600384019160209091019062000179565b5090505050505050620005b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805462000187906200055e565b90600052602060002090601f016020900481019282620001ab5760008555620001f6565b82601f10620001c657805160ff1916838001178555620001f6565b82800160010185558215620001f6579182015b82811115620001f6578251825591602001919060010190620001d9565b506200020492915062000260565b5090565b828054828255906000526020600020908101928215620001f6579160200282015b82811115620001f657825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000229565b5b8082111562000204576000815560010162000261565b600082601f83011262000288578081fd5b815160206001600160401b03821115620002a657620002a66200059b565b8160051b620002b78282016200052b565b838152828101908684018388018501891015620002d2578687fd5b8693505b858410156200030b5780516001600160a01b0381168114620002f6578788fd5b835260019390930192918401918401620002d6565b50979650505050505050565b600082601f83011262000328578081fd5b81516001600160401b038111156200034457620003446200059b565b60206200035a601f8301601f191682016200052b565b82815285828487010111156200036e578384fd5b835b838110156200038d57858101830151828201840152820162000370565b838111156200039e57848385840101525b5095945050505050565b60008060008060808587031215620003be578384fd5b84516001600160401b0380821115620003d5578586fd5b620003e38883890162000317565b95506020870151915080821115620003f9578485fd5b620004078883890162000317565b945060408701519150808211156200041d578384fd5b908601906080828903121562000431578384fd5b6200043b62000500565b8251828111156200044a578586fd5b620004588a82860162000317565b8252506020830151828111156200046d578586fd5b6200047b8a82860162000317565b60208301525060408301518281111562000493578586fd5b620004a18a82860162000317565b604083015250606083015182811115620004b9578586fd5b620004c78a82860162000317565b606083015250809450506060870151915080821115620004e5578283fd5b50620004f48782880162000277565b91505092959194509250565b604051608081016001600160401b03811182821017156200052557620005256200059b565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200055657620005566200059b565b604052919050565b600181811c908216806200057357607f821691505b602082108114156200059557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6103a980620005c16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063a4ed3bdb1461007b578063f2fde38b14610090575b600080fd5b6100596100a3565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61008361010e565b60405161007291906102e5565b61005961009e3660046102b7565b61019c565b6000546001600160a01b031633146101025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61010c6000610267565b565b6001805461011b90610338565b80601f016020809104026020016040519081016040528092919081815260200182805461014790610338565b80156101945780601f1061016957610100808354040283529160200191610194565b820191906000526020600020905b81548152906001019060200180831161017757829003601f168201915b505050505081565b6000546001600160a01b031633146101f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f9565b6001600160a01b03811661025b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f9565b61026481610267565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102c8578081fd5b81356001600160a01b03811681146102de578182fd5b9392505050565b6000602080835283518082850152825b81811015610311578581018301518582016040015282016102f5565b818111156103225783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061034c57607f821691505b6020821081141561036d57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220566f2ebecc4f144e8c33be76d28819cc2ba6b6f053dfac429ffe3ed33b2affd564736f6c63430008040033";
