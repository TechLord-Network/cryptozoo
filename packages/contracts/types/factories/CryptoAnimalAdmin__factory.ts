/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CryptoAnimalAdmin } from "../CryptoAnimalAdmin";

export class CryptoAnimalAdmin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): Promise<CryptoAnimalAdmin> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<CryptoAnimalAdmin>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): CryptoAnimalAdmin {
    return super.attach(address) as CryptoAnimalAdmin;
  }
  connect(signer: Signer): CryptoAnimalAdmin__factory {
    return super.connect(signer) as CryptoAnimalAdmin__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoAnimalAdmin {
    return new Contract(address, _abi, signerOrProvider) as CryptoAnimalAdmin;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "coolDownUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "feePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "hatchPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "hatchReadyTimeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "mktsqWalletUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "animals",
    outputs: [
      {
        internalType: "bool",
        name: "inBreedMarket",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "matronId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sireId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
      {
        internalType: "enum MarketStatus",
        name: "inMarket",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "eggTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hatchTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastBreedTime",
            type: "uint256",
          },
        ],
        internalType: "struct AnimalTime",
        name: "time",
        type: "tuple",
      },
      {
        internalType: "enum Specie",
        name: "specie",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "coolDowns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "getFeeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hatchPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hatchReadyTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "inBreedMarket",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "matronId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sireId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dna",
            type: "uint256",
          },
          {
            internalType: "enum MarketStatus",
            name: "inMarket",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "eggTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "hatchTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastBreedTime",
                type: "uint256",
              },
            ],
            internalType: "struct AnimalTime",
            name: "time",
            type: "tuple",
          },
          {
            internalType: "enum Specie",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct Animal",
        name: "_value",
        type: "tuple",
      },
    ],
    name: "mintToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mktsqWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_value",
        type: "uint256[]",
      },
    ],
    name: "setCoolDowns",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_value",
        type: "uint8",
      },
    ],
    name: "setFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setHatchPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setHatchReadyTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "setMktsqWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x61012060405261384060809081526201518060a0526203f48060c05262093a8060e05262278d00610100526200003a90600790600562000158565b506201fa4060085567016345785d8a0000600955600a80546001600160a81b03191660031790553480156200006e57600080fd5b506040516200263e3803806200263e8339810160408190526200009191620002f6565b818181818160009080519060200190620000ad929190620001af565b508051620000c3906001906020840190620001af565b505050620000e0620000da6200010260201b60201c565b62000106565b5050600a8054610100600160a81b031916336101000217905550620003b09050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156200019d579160200282015b828111156200019d578251829062ffffff1690559160200191906001019062000179565b50620001ab9291506200022c565b5090565b828054620001bd906200035d565b90600052602060002090601f016020900481019282620001e157600085556200019d565b82601f10620001fc57805160ff19168380011785556200019d565b828001600101855582156200019d579182015b828111156200019d5782518255916020019190600101906200020f565b5b80821115620001ab57600081556001016200022d565b600082601f83011262000254578081fd5b81516001600160401b03808211156200027157620002716200039a565b604051601f8301601f19908116603f011681019082821181831017156200029c576200029c6200039a565b81604052838152602092508683858801011115620002b8578485fd5b8491505b83821015620002db5785820183015181830184015290820190620002bc565b83821115620002ec57848385830101525b9695505050505050565b6000806040838503121562000309578182fd5b82516001600160401b038082111562000320578384fd5b6200032e8683870162000243565b9350602085015191508082111562000344578283fd5b50620003538582860162000243565b9150509250929050565b600181811c908216806200037257607f821691505b602082108114156200039457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61227e80620003c06000396000f3fe6080604052600436106101db5760003560e01c8063715018a611610102578063adc0dbbf11610095578063d55a5a4011610064578063d55a5a40146105cd578063e985e9c5146105f2578063f2fde38b1461063b578063fab47b161461065b57600080fd5b8063adc0dbbf1461054d578063b88d4fde1461056d578063c2ed01301461058d578063c87b56dd146105ad57600080fd5b8063a001ecdd116100d1578063a001ecdd146104cc578063a22cb465146104f8578063a5766aa614610518578063a87d942c1461053857600080fd5b8063715018a61461044d5780638da5cb5b1461046257806395d89b4114610480578063998dd3ca1461049557600080fd5b80632d515f1a1161017a5780635940c40a116101495780635940c40a146103cd5780636352211e146103ed57806369074dfa1461040d57806370a082311461042d57600080fd5b80632d515f1a146102fc57806342842e0e1461031c5780635424cd6b1461033c578063571a26a01461035257600080fd5b8063081812fc116101b6578063081812fc14610260578063095ea7b31461029857806318ecf365146102b857806323b872dd146102dc57600080fd5b8062d4d516146101e757806301ffc9a71461020957806306fdde031461023e57600080fd5b366101e257005b600080fd5b3480156101f357600080fd5b50610207610202366004611d84565b61067b565b005b34801561021557600080fd5b50610229610224366004611df4565b6106f2565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b50610253610744565b6040516102359190611f9c565b34801561026c57600080fd5b5061028061027b366004611e2c565b6107d6565b6040516001600160a01b039091168152602001610235565b3480156102a457600080fd5b506102076102b3366004611d5b565b61086b565b3480156102c457600080fd5b506102ce60095481565b604051908152602001610235565b3480156102e857600080fd5b506102076102f7366004611b6b565b610981565b34801561030857600080fd5b506102ce610317366004611c87565b6109b2565b34801561032857600080fd5b50610207610337366004611b6b565b6109f0565b34801561034857600080fd5b506102ce60085481565b34801561035e57600080fd5b506103a161036d366004611e2c565b600c6020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610235565b3480156103d957600080fd5b506102076103e8366004611e2c565b610a0b565b3480156103f957600080fd5b50610280610408366004611e2c565b610a71565b34801561041957600080fd5b50610207610428366004611e2c565b610ae8565b34801561043957600080fd5b506102ce610448366004611b1f565b610b47565b34801561045957600080fd5b50610207610bce565b34801561046e57600080fd5b506006546001600160a01b0316610280565b34801561048c57600080fd5b50610253610c04565b3480156104a157600080fd5b506104b56104b0366004611e2c565b610c13565b6040516102359b9a99989796959493929190611f11565b3480156104d857600080fd5b50600a546104e69060ff1681565b60405160ff9091168152602001610235565b34801561050457600080fd5b50610207610513366004611c5e565b610ca7565b34801561052457600080fd5b50610207610533366004611e44565b610d6c565b34801561054457600080fd5b50600b546102ce565b34801561055957600080fd5b506102ce610568366004611e2c565b610dd5565b34801561057957600080fd5b50610207610588366004611ba6565b610df6565b34801561059957600080fd5b506102ce6105a8366004611e2c565b610e2e565b3480156105b957600080fd5b506102536105c8366004611e2c565b610e4e565b3480156105d957600080fd5b50600a546102809061010090046001600160a01b031681565b3480156105fe57600080fd5b5061022961060d366004611b39565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561064757600080fd5b50610207610656366004611b1f565b610f35565b34801561066757600080fd5b50610207610676366004611b1f565b610fd0565b6006546001600160a01b031633146106ae5760405162461bcd60e51b81526004016106a590612001565b60405180910390fd5b6106ba60078383611a1a565b506040513381527f6e60dce03379ce27400d4c63c2746725405f5925983b0a8a28e1d9ecb8101f119060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b148061072357506001600160e01b03198216635b5e139f60e01b145b8061073e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461075390612170565b80601f016020809104026020016040519081016040528092919081815260200182805461077f90612170565b80156107cc5780601f106107a1576101008083540402835291602001916107cc565b820191906000526020600020905b8154815290600101906020018083116107af57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661084f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a5565b506000908152600460205260409020546001600160a01b031690565b600061087682610a71565b9050806001600160a01b0316836001600160a01b031614156108e45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106a5565b336001600160a01b03821614806109005750610900813361060d565b6109725760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a5565b61097c838361104a565b505050565b61098b33826110b8565b6109a75760405162461bcd60e51b81526004016106a590612036565b61097c8383836111af565b6006546000906001600160a01b031633146109df5760405162461bcd60e51b81526004016106a590612001565b6109e9838361134f565b9392505050565b61097c83838360405180602001604052806000815250610df6565b6006546001600160a01b03163314610a355760405162461bcd60e51b81526004016106a590612001565b60088190556040513381527f345fca9f47646f63defd2ecd171b711f1a000b379070e9a85608912b48cfd424906020015b60405180910390a150565b6000818152600260205260408120546001600160a01b03168061073e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106a5565b6006546001600160a01b03163314610b125760405162461bcd60e51b81526004016106a590612001565b60098190556040513381527fec62ce711373978703a1a51246d349fa3234137e046d235667234c72e243666590602001610a66565b60006001600160a01b038216610bb25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106a5565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610bf85760405162461bcd60e51b81526004016106a590612001565b610c0260006115db565b565b60606001805461075390612170565b600b8181548110610c2357600080fd5b6000918252602091829020600d909102018054600182015460028301546003840154600485015460058601546006870154600788015460088901546040805160608101825260098c01548152600a8c01549c81019c909c52600b8b0154908c0152600c9099015460ff9889169b50969995989497939692959194909390811692168b565b6001600160a01b038216331415610d005760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a5565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6006546001600160a01b03163314610d965760405162461bcd60e51b81526004016106a590612001565b600a805460ff191660ff83161790556040513381527f51683cc311a496dfc9279cc0e2151357b984511ebed721095ea20ab60ea84cba90602001610a66565b60078181548110610de557600080fd5b600091825260209091200154905081565b610e0033836110b8565b610e1c5760405162461bcd60e51b81526004016106a590612036565b610e288484848461162d565b50505050565b600a54600090606490610e449060ff168461210e565b61073e91906120fa565b6000818152600260205260409020546060906001600160a01b0316610ecd5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106a5565b6000610ee460408051602081019091526000815290565b90506000815111610f0457604051806020016040528060008152506109e9565b80610f0e84611660565b604051602001610f1f929190611ea5565b6040516020818303038152906040529392505050565b6006546001600160a01b03163314610f5f5760405162461bcd60e51b81526004016106a590612001565b6001600160a01b038116610fc45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a5565b610fcd816115db565b50565b6006546001600160a01b03163314610ffa5760405162461bcd60e51b81526004016106a590612001565b600a8054610100600160a81b0319166101006001600160a01b038416021790556040513381527f457f75c866b449ef038ad514b29135364547714475963a0111a5f1d6560cd8c890602001610a66565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061107f82610a71565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166111315760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a5565b600061113c83610a71565b9050806001600160a01b0316846001600160a01b031614806111775750836001600160a01b031661116c846107d6565b6001600160a01b0316145b806111a757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166111c282610a71565b6001600160a01b03161461122a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106a5565b6001600160a01b03821661128c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a5565b61129760008261104a565b6001600160a01b03831660009081526003602052604081208054600192906112c090849061212d565b90915550506001600160a01b03821660009081526003602052604081208054600192906112ee9084906120e2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b80546001818101835560009283528351600d9092027f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db98101805493151560ff1994851617815560208601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba83015560408601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbb83015560608601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbc83015560808601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbd83015560a08601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbe83015560c08601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbf83015560e08601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc08301556101008601517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc19092018054879592949192169083600281111561150a57634e487b7160e01b600052602160045260246000fd5b0217905550610120820151805160098301556020810151600a83015560400151600b820155610140820151600c8201805460ff1916600183601081111561156157634e487b7160e01b600052602160045260246000fd5b021790555050600b546000915061157a9060019061212d565b6000818152600c6020526040812080546001600160a01b03191681556001808201839055600282019290925560038101805460ff19169092179091559091506115c3858361177a565b600b546115d29060019061212d565b95945050505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6116388484846111af565b61164484848484611798565b610e285760405162461bcd60e51b81526004016106a590611faf565b6060816116845750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116ae5780611698816121ab565b91506116a79050600a836120fa565b9150611688565b60008167ffffffffffffffff8111156116d757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611701576020820181803683370190505b5090505b84156111a75761171660018361212d565b9150611723600a866121c6565b61172e9060306120e2565b60f81b81838151811061175157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611773600a866120fa565b9450611705565b6117948282604051806020016040528060008152506118a5565b5050565b60006001600160a01b0384163b1561189a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117dc903390899088908890600401611ed4565b602060405180830381600087803b1580156117f657600080fd5b505af1925050508015611826575060408051601f3d908101601f1916820190925261182391810190611e10565b60015b611880573d808015611854576040519150601f19603f3d011682016040523d82523d6000602084013e611859565b606091505b5080516118785760405162461bcd60e51b81526004016106a590611faf565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111a7565b506001949350505050565b6118af83836118d8565b6118bc6000848484611798565b61097c5760405162461bcd60e51b81526004016106a590611faf565b6001600160a01b03821661192e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a5565b6000818152600260205260409020546001600160a01b0316156119935760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a5565b6001600160a01b03821660009081526003602052604081208054600192906119bc9084906120e2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054828255906000526020600020908101928215611a55579160200282015b82811115611a55578235825591602001919060010190611a3a565b50611a61929150611a65565b5090565b5b80821115611a615760008155600101611a66565b80356001600160a01b0381168114611a9157600080fd5b919050565b80358015158114611a9157600080fd5b803560038110611a9157600080fd5b803560118110611a9157600080fd5b600060608284031215611ad5578081fd5b6040516060810181811067ffffffffffffffff82111715611af857611af861221c565b80604052508091508235815260208301356020820152604083013560408201525092915050565b600060208284031215611b30578081fd5b6109e982611a7a565b60008060408385031215611b4b578081fd5b611b5483611a7a565b9150611b6260208401611a7a565b90509250929050565b600080600060608486031215611b7f578081fd5b611b8884611a7a565b9250611b9660208501611a7a565b9150604084013590509250925092565b60008060008060808587031215611bbb578081fd5b611bc485611a7a565b93506020611bd3818701611a7a565b935060408601359250606086013567ffffffffffffffff80821115611bf6578384fd5b818801915088601f830112611c09578384fd5b813581811115611c1b57611c1b61221c565b611c2d601f8201601f191685016120b1565b91508082528984828501011115611c42578485fd5b8084840185840137810190920192909252939692955090935050565b60008060408385031215611c70578182fd5b611c7983611a7a565b9150611b6260208401611a96565b6000808284036101c0811215611c9b578283fd5b611ca484611a7a565b92506101a080601f1983011215611cb9578283fd5b611cc1612087565b9150611ccf60208601611a96565b825260408501356020830152606085013560408301526080850135606083015260a0850135608083015260c085013560a083015260e085013560c08301526101008086013560e0840152610120611d27818801611aa6565b828501526101409150611d3c88838901611ac4565b90840152611d4b868301611ab5565b9083015250919491935090915050565b60008060408385031215611d6d578182fd5b611d7683611a7a565b946020939093013593505050565b60008060208385031215611d96578182fd5b823567ffffffffffffffff80821115611dad578384fd5b818501915085601f830112611dc0578384fd5b813581811115611dce578485fd5b8660208260051b8501011115611de2578485fd5b60209290920196919550909350505050565b600060208284031215611e05578081fd5b81356109e981612232565b600060208284031215611e21578081fd5b81516109e981612232565b600060208284031215611e3d578081fd5b5035919050565b600060208284031215611e55578081fd5b813560ff811681146109e9578182fd5b60008151808452611e7d816020860160208601612144565b601f01601f19169290920160200192915050565b60118110611ea157611ea1612206565b9052565b60008351611eb7818460208801612144565b835190830190611ecb818360208801612144565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f0790830184611e65565b9695505050505050565b60006101a0820190508c151582528b60208301528a60408301528960608301528860808301528760a08301528660c08301528560e083015260038510611f5957611f59612206565b84610100830152835161012083015260208401516101408301526040840151610160830152611f8c610180830184611e91565b9c9b505050505050505050505050565b6020815260006109e96020830184611e65565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051610160810167ffffffffffffffff811182821017156120ab576120ab61221c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156120da576120da61221c565b604052919050565b600082198211156120f5576120f56121da565b500190565b600082612109576121096121f0565b500490565b6000816000190483118215151615612128576121286121da565b500290565b60008282101561213f5761213f6121da565b500390565b60005b8381101561215f578181015183820152602001612147565b83811115610e285750506000910152565b600181811c9082168061218457607f821691505b602082108114156121a557634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156121bf576121bf6121da565b5060010190565b6000826121d5576121d56121f0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610fcd57600080fdfea2646970667358221220508efbebe475887b309b9aa153b994046a293fa09ab35ced09cf811857e3598c64736f6c63430008040033";
